{"ast":null,"code":"var _jsxFileName = \"/Users/haris/Desktop/twitchStream/src/components/GoogleAuth.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          className: \"ui red google button\",\n          onClick: this.onSignOutClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), \"Sign Out\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"ui red google button\",\n          onClick: this.onSignInClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), \"Sign In\");\n      }\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderAuthButton());\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: \"114821414088-q0dupsas4a61a9ajn4173kge1p7e71jo.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/haris/Desktop/twitchStream/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","renderAuthButton","render","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAiBvCC,YAjBuC,GAiBxBC,UAAU,IAAI;AAC3B,UAAIA,UAAJ,EAAgB;AACd,aAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACD,OAFD,MAEO;AACL,aAAKJ,KAAL,CAAWL,OAAX;AACD;AACF,KAvBsC;;AAAA,SAyBvCU,aAzBuC,GAyBvB,MAAM;AACpB,WAAKJ,IAAL,CAAUP,MAAV;AACD,KA3BsC;;AAAA,SA6BvCY,cA7BuC,GA6BtB,MAAM;AACrB,WAAKL,IAAL,CAAUN,OAAV;AACD,KA/BsC;;AAAA,SAiCvCY,gBAjCuC,GAiCpB,MAAM;AACvB,UAAI,KAAKP,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAClC,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAChC,eACE;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,KAAKO,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,KAAKD,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,YADF;AAMD;AACF,KAnDsC;;AAAA,SAqDvCG,MArDuC,GAqD9B,MAAM;AACb,aAAO;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,KAAKD,gBAAL,EAAvB,CAAP;AACD,KAvDsC;AAAA;;AACvCE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKhB,IAAL,GAAYS,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKrB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBqB,MAArB,CAA4B,KAAKtB,YAAjC;AACD,OAVH;AAWD,KAZD;AAaD;;AAfsC;;AA0DzC,MAAMuB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLvB,IAAAA,UAAU,EAAEuB,KAAK,CAACrB,IAAN,CAAWF;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CACpB4B,eADoB,EAEpB;AAAE3B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"114821414088-q0dupsas4a61a9ajn4173kge1p7e71jo.apps.googleusercontent.com\",\n          scope: \"email\"\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton = () => {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button className=\"ui red google button\" onClick={this.onSignOutClick}>\n          <i />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"ui red google button\" onClick={this.onSignInClick}>\n          <i />\n          Sign In\n        </button>\n      );\n    }\n  };\n\n  render = () => {\n    return <div className=\"item\">{this.renderAuthButton()}</div>;\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signIn, signOut }\n)(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}