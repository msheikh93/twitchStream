{"ast":null,"code":"var _jsxFileName = \"/Users/haris/Desktop/twitchStream/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  renderInput({\n    input,\n    label,\n    meta\n  }) {\n    console.log(meta);\n\n    if (meta.touched && meta.error) {}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, label), React.createElement(\"input\", Object.assign({}, input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui primary button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  // console.log(formValues);\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"StreamCreate\",\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/haris/Desktop/twitchStream/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","onSubmit","formValues","console","log","renderInput","input","label","meta","touched","error","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAazCC,QAbyC,GAa7BC,UAAD,IAAgB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,KAfwC;AAAA;;AACzCG,EAAAA,WAAW,CAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAF,EAA0B;AACnCL,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,QAAIA,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAAzB,EAAgC,CAC/B;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQH,KAAR,CADF,EAEE,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAMD;;AAMDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKZ,QAA7B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKI,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD;;AAzBwC;;AA4B3C,MAAMS,QAAQ,GAAGZ,UAAU,IAAI;AAC7B;AAEA,QAAMa,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACb,UAAU,CAACc,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AAED,MAAI,CAACd,UAAU,CAACe,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAdD;;AAgBA,eAAejB,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE,cADiB;AAEvBJ,EAAAA;AAFuB,CAAD,CAAT,CAGZf,YAHY,CAAf","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderInput ({ input, label, meta }) {\n    console.log(meta);\n    if (meta.touched && meta.error) {\n    }\n    return (\n      <div>\n        <label>{label}</label>\n        <input {...input} />\n      </div>\n    );\n  };\n\n  onSubmit = (formValues) => {\n    console.log(formValues);\n  };\n\n  render() {\n    return (\n      <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n        <button className=\"ui primary button\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  // console.log(formValues);\n\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n  \n  return errors;\n};\n\nexport default reduxForm({\n  form: \"StreamCreate\",\n  validate\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}